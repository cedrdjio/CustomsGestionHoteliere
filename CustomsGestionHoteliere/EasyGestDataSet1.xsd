<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EasyGestDataSet1" targetNamespace="http://tempuri.org/EasyGestDataSet1.xsd" xmlns:mstns="http://tempuri.org/EasyGestDataSet1.xsd" xmlns="http://tempuri.org/EasyGestDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EasyGestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EasyGestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CustomsGestionHoteliere.Properties.Settings.GlobalReference.Default.EasyGestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypePlatsTableAdapter" GeneratorDataComponentClassName="TypePlatsTableAdapter" Name="TypePlats" UserDataComponentName="TypePlatsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EasyGestConnectionString (Settings)" DbObjectName="EasyGest.dbo.TypePlats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypePlats] WHERE (([idTypePlat] = @Original_idTypePlat) AND ((@IsNull_nomTypePlat = 1 AND [nomTypePlat] IS NULL) OR ([nomTypePlat] = @Original_nomTypePlat)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTypePlat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypePlat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nomTypePlat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nomTypePlat" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nomTypePlat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomTypePlat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypePlats] ([idTypePlat], [nomTypePlat]) VALUES (@idTypePlat, @nomTypePlat);
SELECT idTypePlat, nomTypePlat FROM TypePlats WHERE (idTypePlat = @idTypePlat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTypePlat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypePlat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nomTypePlat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomTypePlat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idTypePlat, nomTypePlat FROM dbo.TypePlats</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypePlats] SET [idTypePlat] = @idTypePlat, [nomTypePlat] = @nomTypePlat WHERE (([idTypePlat] = @Original_idTypePlat) AND ((@IsNull_nomTypePlat = 1 AND [nomTypePlat] IS NULL) OR ([nomTypePlat] = @Original_nomTypePlat)));
SELECT idTypePlat, nomTypePlat FROM TypePlats WHERE (idTypePlat = @idTypePlat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTypePlat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypePlat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nomTypePlat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomTypePlat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTypePlat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypePlat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nomTypePlat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nomTypePlat" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nomTypePlat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomTypePlat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idTypePlat" DataSetColumn="idTypePlat" />
              <Mapping SourceColumn="nomTypePlat" DataSetColumn="nomTypePlat" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EasyGestDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EasyGestDataSet1" msprop:Generator_UserDSName="EasyGestDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TypePlats" msprop:Generator_TableClassName="TypePlatsDataTable" msprop:Generator_TableVarName="tableTypePlats" msprop:Generator_TablePropName="TypePlats" msprop:Generator_RowDeletingName="TypePlatsRowDeleting" msprop:Generator_RowChangingName="TypePlatsRowChanging" msprop:Generator_RowEvHandlerName="TypePlatsRowChangeEventHandler" msprop:Generator_RowDeletedName="TypePlatsRowDeleted" msprop:Generator_UserTableName="TypePlats" msprop:Generator_RowChangedName="TypePlatsRowChanged" msprop:Generator_RowEvArgName="TypePlatsRowChangeEvent" msprop:Generator_RowClassName="TypePlatsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idTypePlat" msprop:Generator_ColumnVarNameInTable="columnidTypePlat" msprop:Generator_ColumnPropNameInRow="idTypePlat" msprop:Generator_ColumnPropNameInTable="idTypePlatColumn" msprop:Generator_UserColumnName="idTypePlat" type="xs:int" />
              <xs:element name="nomTypePlat" msprop:Generator_ColumnVarNameInTable="columnnomTypePlat" msprop:Generator_ColumnPropNameInRow="nomTypePlat" msprop:Generator_ColumnPropNameInTable="nomTypePlatColumn" msprop:Generator_UserColumnName="nomTypePlat" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypePlats" />
      <xs:field xpath="mstns:idTypePlat" />
    </xs:unique>
  </xs:element>
</xs:schema>